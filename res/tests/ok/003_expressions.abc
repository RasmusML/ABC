
/*
 * /* nested comment */
 *
 */

compute :: () -> i16 {
  return 10;
}

get_area_of_rectangle :: (width: i32, height: i32) -> i64 {
  return width * height;
}

square :: (v: i32) -> i32 {
  return v * v;
}

bool_test :: () -> bool {
  return true;
}


main :: () {
  compute();
  
  v1: i32;  // declaration
  v1 = compute() + square(10);
  v1 = 1 + compute() * 23;
  
  
  // definitions
  v1 = ((1+2))*3 / 10 - 2;
  v1 = 1*2+3*4;
  v1 = 1+2*3+4;
  v1 = -1-3;
  
  v2: i32 = 12;
  v2 = (v1 + v2) * 2 * v1;
  
  c: char = 'a';
  area: i64 = get_area_of_rectangle(v1, v2);
  area = c + 10;
  
  v3: i32 = 10 + 20 + 30 * 'a';
  v4: i16 = 'a' * 10 - 100;
  v5: bool = 30 > 100;
  v5 = 30 > 100 || bool_test();
  v6: i32 = 10 ^ 20;
  v7: bool = (10 > 20) ^ (30 > 100);
  
  v8: i32 = 10 + 20 + 30 * 'a';
  v9: i16 = 'a' * 10 - 100;
  v10: bool = 30 > 100;
  v10 = 30 > 100 || bool_test();
  v11: i16 = 10 ^ 8 | 5 | 3;
  v12: i8 = 2 << 10 >> 10;
  
  _i8: i8;
  _i8 = (i8)10 + (i8)200; // -46 due to the casting of 200 to i8 (-56).
  _i8 = ~0;
  _i8 = 100 >>> 10;
  _i8 = 100 >> 10;
  
}